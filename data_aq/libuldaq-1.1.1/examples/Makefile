# Makefile.in generated by automake 1.14.1 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libuldaq
pkgincludedir = $(includedir)/libuldaq
pkglibdir = $(libdir)/libuldaq
pkglibexecdir = $(libexecdir)/libuldaq
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin19.0.0
host_triplet = x86_64-apple-darwin19.0.0
noinst_PROGRAMS = AIn$(EXEEXT) AInScan$(EXEEXT) \
	AInScanWithEvents$(EXEEXT) AInScanWithQueue$(EXEEXT) \
	AInScanWithTrigger$(EXEEXT) AInScanIepe$(EXEEXT) AOut$(EXEEXT) \
	AOutScan$(EXEEXT) CIn$(EXEEXT) CInScan$(EXEEXT) \
	CInScanWithEncoder$(EXEEXT) DaqInScan$(EXEEXT) \
	DaqInScanWithTrigger$(EXEEXT) DaqOutScan$(EXEEXT) DIn$(EXEEXT) \
	DBitIn$(EXEEXT) DInScan$(EXEEXT) DOut$(EXEEXT) \
	DBitOut$(EXEEXT) DOutScan$(EXEEXT) TmrPulseOut$(EXEEXT) \
	TIn$(EXEEXT)
subdir = examples
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am_AIn_OBJECTS = AIn.$(OBJEXT)
AIn_OBJECTS = $(am_AIn_OBJECTS)
AIn_LDADD = $(LDADD)
AIn_DEPENDENCIES = ../src/libuldaq.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_AInScan_OBJECTS = AInScan.$(OBJEXT)
AInScan_OBJECTS = $(am_AInScan_OBJECTS)
AInScan_LDADD = $(LDADD)
AInScan_DEPENDENCIES = ../src/libuldaq.la
am_AInScanIepe_OBJECTS = AInScanIepe.$(OBJEXT)
AInScanIepe_OBJECTS = $(am_AInScanIepe_OBJECTS)
AInScanIepe_LDADD = $(LDADD)
AInScanIepe_DEPENDENCIES = ../src/libuldaq.la
am_AInScanWithEvents_OBJECTS = AInScanWithEvents.$(OBJEXT)
AInScanWithEvents_OBJECTS = $(am_AInScanWithEvents_OBJECTS)
AInScanWithEvents_LDADD = $(LDADD)
AInScanWithEvents_DEPENDENCIES = ../src/libuldaq.la
am_AInScanWithQueue_OBJECTS = AInScanWithQueue.$(OBJEXT)
AInScanWithQueue_OBJECTS = $(am_AInScanWithQueue_OBJECTS)
AInScanWithQueue_LDADD = $(LDADD)
AInScanWithQueue_DEPENDENCIES = ../src/libuldaq.la
am_AInScanWithTrigger_OBJECTS = AInScanWithTrigger.$(OBJEXT)
AInScanWithTrigger_OBJECTS = $(am_AInScanWithTrigger_OBJECTS)
AInScanWithTrigger_LDADD = $(LDADD)
AInScanWithTrigger_DEPENDENCIES = ../src/libuldaq.la
am_AOut_OBJECTS = AOut.$(OBJEXT)
AOut_OBJECTS = $(am_AOut_OBJECTS)
AOut_LDADD = $(LDADD)
AOut_DEPENDENCIES = ../src/libuldaq.la
am_AOutScan_OBJECTS = AOutScan.$(OBJEXT)
AOutScan_OBJECTS = $(am_AOutScan_OBJECTS)
AOutScan_DEPENDENCIES = $(LDADD)
am_CIn_OBJECTS = CIn.$(OBJEXT)
CIn_OBJECTS = $(am_CIn_OBJECTS)
CIn_LDADD = $(LDADD)
CIn_DEPENDENCIES = ../src/libuldaq.la
am_CInScan_OBJECTS = CInScan.$(OBJEXT)
CInScan_OBJECTS = $(am_CInScan_OBJECTS)
CInScan_LDADD = $(LDADD)
CInScan_DEPENDENCIES = ../src/libuldaq.la
am_CInScanWithEncoder_OBJECTS = CInScanWithEncoder.$(OBJEXT)
CInScanWithEncoder_OBJECTS = $(am_CInScanWithEncoder_OBJECTS)
CInScanWithEncoder_LDADD = $(LDADD)
CInScanWithEncoder_DEPENDENCIES = ../src/libuldaq.la
am_DBitIn_OBJECTS = DBitIn.$(OBJEXT)
DBitIn_OBJECTS = $(am_DBitIn_OBJECTS)
DBitIn_LDADD = $(LDADD)
DBitIn_DEPENDENCIES = ../src/libuldaq.la
am_DBitOut_OBJECTS = DBitOut.$(OBJEXT)
DBitOut_OBJECTS = $(am_DBitOut_OBJECTS)
DBitOut_DEPENDENCIES = $(LDADD)
am_DIn_OBJECTS = DIn.$(OBJEXT)
DIn_OBJECTS = $(am_DIn_OBJECTS)
DIn_LDADD = $(LDADD)
DIn_DEPENDENCIES = ../src/libuldaq.la
am_DInScan_OBJECTS = DInScan.$(OBJEXT)
DInScan_OBJECTS = $(am_DInScan_OBJECTS)
DInScan_LDADD = $(LDADD)
DInScan_DEPENDENCIES = ../src/libuldaq.la
am_DOut_OBJECTS = DOut.$(OBJEXT)
DOut_OBJECTS = $(am_DOut_OBJECTS)
DOut_DEPENDENCIES = $(LDADD)
am_DOutScan_OBJECTS = DOutScan.$(OBJEXT)
DOutScan_OBJECTS = $(am_DOutScan_OBJECTS)
DOutScan_DEPENDENCIES = $(LDADD)
am_DaqInScan_OBJECTS = DaqInScan.$(OBJEXT)
DaqInScan_OBJECTS = $(am_DaqInScan_OBJECTS)
DaqInScan_LDADD = $(LDADD)
DaqInScan_DEPENDENCIES = ../src/libuldaq.la
am_DaqInScanWithTrigger_OBJECTS = DaqInScanWithTrigger.$(OBJEXT)
DaqInScanWithTrigger_OBJECTS = $(am_DaqInScanWithTrigger_OBJECTS)
DaqInScanWithTrigger_LDADD = $(LDADD)
DaqInScanWithTrigger_DEPENDENCIES = ../src/libuldaq.la
am_DaqOutScan_OBJECTS = DaqOutScan.$(OBJEXT)
DaqOutScan_OBJECTS = $(am_DaqOutScan_OBJECTS)
DaqOutScan_DEPENDENCIES = $(LDADD)
am_TIn_OBJECTS = TIn.$(OBJEXT)
TIn_OBJECTS = $(am_TIn_OBJECTS)
TIn_LDADD = $(LDADD)
TIn_DEPENDENCIES = ../src/libuldaq.la
am_TmrPulseOut_OBJECTS = TmrPulseOut.$(OBJEXT)
TmrPulseOut_OBJECTS = $(am_TmrPulseOut_OBJECTS)
TmrPulseOut_LDADD = $(LDADD)
TmrPulseOut_DEPENDENCIES = ../src/libuldaq.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(AIn_SOURCES) $(AInScan_SOURCES) $(AInScanIepe_SOURCES) \
	$(AInScanWithEvents_SOURCES) $(AInScanWithQueue_SOURCES) \
	$(AInScanWithTrigger_SOURCES) $(AOut_SOURCES) \
	$(AOutScan_SOURCES) $(CIn_SOURCES) $(CInScan_SOURCES) \
	$(CInScanWithEncoder_SOURCES) $(DBitIn_SOURCES) \
	$(DBitOut_SOURCES) $(DIn_SOURCES) $(DInScan_SOURCES) \
	$(DOut_SOURCES) $(DOutScan_SOURCES) $(DaqInScan_SOURCES) \
	$(DaqInScanWithTrigger_SOURCES) $(DaqOutScan_SOURCES) \
	$(TIn_SOURCES) $(TmrPulseOut_SOURCES)
DIST_SOURCES = $(AIn_SOURCES) $(AInScan_SOURCES) \
	$(AInScanIepe_SOURCES) $(AInScanWithEvents_SOURCES) \
	$(AInScanWithQueue_SOURCES) $(AInScanWithTrigger_SOURCES) \
	$(AOut_SOURCES) $(AOutScan_SOURCES) $(CIn_SOURCES) \
	$(CInScan_SOURCES) $(CInScanWithEncoder_SOURCES) \
	$(DBitIn_SOURCES) $(DBitOut_SOURCES) $(DIn_SOURCES) \
	$(DInScan_SOURCES) $(DOut_SOURCES) $(DOutScan_SOURCES) \
	$(DaqInScan_SOURCES) $(DaqInScanWithTrigger_SOURCES) \
	$(DaqOutScan_SOURCES) $(TIn_SOURCES) $(TmrPulseOut_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/missing autoconf
AUTOHEADER = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/missing autoheader
AUTOMAKE = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/missing automake-1.14
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O3
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = -lusb-1.0  -framework IOKit -framework CoreFoundation
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLDFLAGS = -version-info 2:1:1
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OS_DARWIN = 
OS_LINUX = 
OTOOL = otool
OTOOL64 = :
PACKAGE = libuldaq
PACKAGE_BUGREPORT = info@mccdaq.com
PACKAGE_NAME = libuldaq
PACKAGE_STRING = libuldaq 1.1.1
PACKAGE_TARNAME = libuldaq
PACKAGE_URL = http://www.mccdaq.com
PACKAGE_VERSION = 1.1.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.1.1
abs_builddir = /Users/trevorlong/libuldaq-1.1.1/examples
abs_srcdir = /Users/trevorlong/libuldaq-1.1.1/examples
abs_top_builddir = /Users/trevorlong/libuldaq-1.1.1
abs_top_srcdir = /Users/trevorlong/libuldaq-1.1.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin19.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin19.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin19.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin19.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/trevorlong/libuldaq-1.1.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I$(top_srcdir)/src
LDADD = ../src/libuldaq.la
AIn_SOURCES = AIn.c utility.h
AInScan_SOURCES = AInScan.c
AInScanWithEvents_SOURCES = AInScanWithEvents.c
AInScanWithQueue_SOURCES = AInScanWithQueue.c
AInScanWithTrigger_SOURCES = AInScanWithTrigger.c
AInScanIepe_SOURCES = AInScanIepe.c
AOut_SOURCES = AOut.c
AOutScan_LDADD = $(LDADD) -lm
AOutScan_SOURCES = AOutScan.c
CIn_SOURCES = CIn.c
CInScan_SOURCES = CInScan.c
CInScanWithEncoder_SOURCES = CInScanWithEncoder.c
DaqInScan_SOURCES = DaqInScan.c
DaqInScanWithTrigger_SOURCES = DaqInScanWithTrigger.c
DaqOutScan_LDADD = $(LDADD) -lm
DaqOutScan_SOURCES = DaqOutScan.c
DIn_SOURCES = DIn.c
DBitIn_SOURCES = DBitIn.c
DInScan_SOURCES = DInScan.c
DOut_LDADD = $(LDADD) -lm
DOut_SOURCES = DOut.c
DBitOut_LDADD = $(LDADD) -lm
DBitOut_SOURCES = DBitOut.c
DOutScan_LDADD = $(LDADD) -lm
DOutScan_SOURCES = DOutScan.c
TmrPulseOut_SOURCES = TmrPulseOut.c
TIn_SOURCES = TIn.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

AIn$(EXEEXT): $(AIn_OBJECTS) $(AIn_DEPENDENCIES) $(EXTRA_AIn_DEPENDENCIES) 
	@rm -f AIn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AIn_OBJECTS) $(AIn_LDADD) $(LIBS)

AInScan$(EXEEXT): $(AInScan_OBJECTS) $(AInScan_DEPENDENCIES) $(EXTRA_AInScan_DEPENDENCIES) 
	@rm -f AInScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AInScan_OBJECTS) $(AInScan_LDADD) $(LIBS)

AInScanIepe$(EXEEXT): $(AInScanIepe_OBJECTS) $(AInScanIepe_DEPENDENCIES) $(EXTRA_AInScanIepe_DEPENDENCIES) 
	@rm -f AInScanIepe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AInScanIepe_OBJECTS) $(AInScanIepe_LDADD) $(LIBS)

AInScanWithEvents$(EXEEXT): $(AInScanWithEvents_OBJECTS) $(AInScanWithEvents_DEPENDENCIES) $(EXTRA_AInScanWithEvents_DEPENDENCIES) 
	@rm -f AInScanWithEvents$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AInScanWithEvents_OBJECTS) $(AInScanWithEvents_LDADD) $(LIBS)

AInScanWithQueue$(EXEEXT): $(AInScanWithQueue_OBJECTS) $(AInScanWithQueue_DEPENDENCIES) $(EXTRA_AInScanWithQueue_DEPENDENCIES) 
	@rm -f AInScanWithQueue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AInScanWithQueue_OBJECTS) $(AInScanWithQueue_LDADD) $(LIBS)

AInScanWithTrigger$(EXEEXT): $(AInScanWithTrigger_OBJECTS) $(AInScanWithTrigger_DEPENDENCIES) $(EXTRA_AInScanWithTrigger_DEPENDENCIES) 
	@rm -f AInScanWithTrigger$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AInScanWithTrigger_OBJECTS) $(AInScanWithTrigger_LDADD) $(LIBS)

AOut$(EXEEXT): $(AOut_OBJECTS) $(AOut_DEPENDENCIES) $(EXTRA_AOut_DEPENDENCIES) 
	@rm -f AOut$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AOut_OBJECTS) $(AOut_LDADD) $(LIBS)

AOutScan$(EXEEXT): $(AOutScan_OBJECTS) $(AOutScan_DEPENDENCIES) $(EXTRA_AOutScan_DEPENDENCIES) 
	@rm -f AOutScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AOutScan_OBJECTS) $(AOutScan_LDADD) $(LIBS)

CIn$(EXEEXT): $(CIn_OBJECTS) $(CIn_DEPENDENCIES) $(EXTRA_CIn_DEPENDENCIES) 
	@rm -f CIn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CIn_OBJECTS) $(CIn_LDADD) $(LIBS)

CInScan$(EXEEXT): $(CInScan_OBJECTS) $(CInScan_DEPENDENCIES) $(EXTRA_CInScan_DEPENDENCIES) 
	@rm -f CInScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CInScan_OBJECTS) $(CInScan_LDADD) $(LIBS)

CInScanWithEncoder$(EXEEXT): $(CInScanWithEncoder_OBJECTS) $(CInScanWithEncoder_DEPENDENCIES) $(EXTRA_CInScanWithEncoder_DEPENDENCIES) 
	@rm -f CInScanWithEncoder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(CInScanWithEncoder_OBJECTS) $(CInScanWithEncoder_LDADD) $(LIBS)

DBitIn$(EXEEXT): $(DBitIn_OBJECTS) $(DBitIn_DEPENDENCIES) $(EXTRA_DBitIn_DEPENDENCIES) 
	@rm -f DBitIn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DBitIn_OBJECTS) $(DBitIn_LDADD) $(LIBS)

DBitOut$(EXEEXT): $(DBitOut_OBJECTS) $(DBitOut_DEPENDENCIES) $(EXTRA_DBitOut_DEPENDENCIES) 
	@rm -f DBitOut$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DBitOut_OBJECTS) $(DBitOut_LDADD) $(LIBS)

DIn$(EXEEXT): $(DIn_OBJECTS) $(DIn_DEPENDENCIES) $(EXTRA_DIn_DEPENDENCIES) 
	@rm -f DIn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DIn_OBJECTS) $(DIn_LDADD) $(LIBS)

DInScan$(EXEEXT): $(DInScan_OBJECTS) $(DInScan_DEPENDENCIES) $(EXTRA_DInScan_DEPENDENCIES) 
	@rm -f DInScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DInScan_OBJECTS) $(DInScan_LDADD) $(LIBS)

DOut$(EXEEXT): $(DOut_OBJECTS) $(DOut_DEPENDENCIES) $(EXTRA_DOut_DEPENDENCIES) 
	@rm -f DOut$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DOut_OBJECTS) $(DOut_LDADD) $(LIBS)

DOutScan$(EXEEXT): $(DOutScan_OBJECTS) $(DOutScan_DEPENDENCIES) $(EXTRA_DOutScan_DEPENDENCIES) 
	@rm -f DOutScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DOutScan_OBJECTS) $(DOutScan_LDADD) $(LIBS)

DaqInScan$(EXEEXT): $(DaqInScan_OBJECTS) $(DaqInScan_DEPENDENCIES) $(EXTRA_DaqInScan_DEPENDENCIES) 
	@rm -f DaqInScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DaqInScan_OBJECTS) $(DaqInScan_LDADD) $(LIBS)

DaqInScanWithTrigger$(EXEEXT): $(DaqInScanWithTrigger_OBJECTS) $(DaqInScanWithTrigger_DEPENDENCIES) $(EXTRA_DaqInScanWithTrigger_DEPENDENCIES) 
	@rm -f DaqInScanWithTrigger$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DaqInScanWithTrigger_OBJECTS) $(DaqInScanWithTrigger_LDADD) $(LIBS)

DaqOutScan$(EXEEXT): $(DaqOutScan_OBJECTS) $(DaqOutScan_DEPENDENCIES) $(EXTRA_DaqOutScan_DEPENDENCIES) 
	@rm -f DaqOutScan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DaqOutScan_OBJECTS) $(DaqOutScan_LDADD) $(LIBS)

TIn$(EXEEXT): $(TIn_OBJECTS) $(TIn_DEPENDENCIES) $(EXTRA_TIn_DEPENDENCIES) 
	@rm -f TIn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(TIn_OBJECTS) $(TIn_LDADD) $(LIBS)

TmrPulseOut$(EXEEXT): $(TmrPulseOut_OBJECTS) $(TmrPulseOut_DEPENDENCIES) $(EXTRA_TmrPulseOut_DEPENDENCIES) 
	@rm -f TmrPulseOut$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(TmrPulseOut_OBJECTS) $(TmrPulseOut_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AIn.Po
include ./$(DEPDIR)/AInScan.Po
include ./$(DEPDIR)/AInScanIepe.Po
include ./$(DEPDIR)/AInScanWithEvents.Po
include ./$(DEPDIR)/AInScanWithQueue.Po
include ./$(DEPDIR)/AInScanWithTrigger.Po
include ./$(DEPDIR)/AOut.Po
include ./$(DEPDIR)/AOutScan.Po
include ./$(DEPDIR)/CIn.Po
include ./$(DEPDIR)/CInScan.Po
include ./$(DEPDIR)/CInScanWithEncoder.Po
include ./$(DEPDIR)/DBitIn.Po
include ./$(DEPDIR)/DBitOut.Po
include ./$(DEPDIR)/DIn.Po
include ./$(DEPDIR)/DInScan.Po
include ./$(DEPDIR)/DOut.Po
include ./$(DEPDIR)/DOutScan.Po
include ./$(DEPDIR)/DaqInScan.Po
include ./$(DEPDIR)/DaqInScanWithTrigger.Po
include ./$(DEPDIR)/DaqOutScan.Po
include ./$(DEPDIR)/TIn.Po
include ./$(DEPDIR)/TmrPulseOut.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
