function [Vms,rpm,Dbeta,TN,QNm,PshaftW,Volts,Amps,effmot,effprop,adv,CT,CP,DVms,eff,Pelec,Pprop,cl_avg,cd_avg] = QPsread(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as column vectors.
%   [VMS,RPM,DBETA,TN,QNM,PSHAFTW,VOLTS,AMPS,EFFMOT,EFFPROP,ADV,CT,CP,DVMS,EFF,PELEC,PPROP,CL_AVG,CD_AVG]
%   = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [VMS,RPM,DBETA,TN,QNM,PSHAFTW,VOLTS,AMPS,EFFMOT,EFFPROP,ADV,CT,CP,DVMS,EFF,PELEC,PPROP,CL_AVG,CD_AVG]
%   = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Vms,rpm,Dbeta,TN,QNm,PshaftW,Volts,Amps,effmot,effprop,adv,CT,CP,DVms,eff,Pelec,Pprop,cl_avg,cd_avg] = importfile1('out1.dat',17, 17);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/09/26 09:57:30

%% Initialize variables.
if nargin<=2
    startRow = 18;
    endRow = 18;
end

%% Format for each line of text:
%   column2: double (%f)
%	column3: text (%s)
%   column4: double (%f)
%	column5: text (%s)
%   column6: text (%s)
%	column7: text (%s)
%   column8: categorical (%C)
%	column9: text (%s)
%   column10: double (%f)
%	column11: double (%f)
%   column12: double (%f)
%	column13: categorical (%C)
%   column14: text (%s)
%	column15: text (%s)
%   column16: text (%s)
%	column17: text (%s)
%   column18: text (%s)
%	column19: text (%s)
%   column20: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*1s%8f%12s%7f%14s%10s%11s%9s%10s%9f%10f%10f%12s%11s%11s%7s%9s%12s%13s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Remove white space around all cell columns.
dataArray{2} = strtrim(dataArray{2});
dataArray{4} = strtrim(dataArray{4});
dataArray{5} = strtrim(dataArray{5});
dataArray{6} = strtrim(dataArray{6});
dataArray{8} = strtrim(dataArray{8});
dataArray{13} = strtrim(dataArray{13});
dataArray{14} = strtrim(dataArray{14});
dataArray{15} = strtrim(dataArray{15});
dataArray{16} = strtrim(dataArray{16});
dataArray{17} = strtrim(dataArray{17});
dataArray{18} = strtrim(dataArray{18});
dataArray{19} = strtrim(dataArray{19});

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Vms = dataArray{:, 1};
rpm = dataArray{:, 2};
Dbeta = dataArray{:, 3};
TN = dataArray{:, 4};
QNm = dataArray{:, 5};
PshaftW = dataArray{:, 6};
Volts = dataArray{:, 7};
Amps = dataArray{:, 8};
effmot = dataArray{:, 9};
effprop = dataArray{:, 10};
adv = dataArray{:, 11};
CT = dataArray{:, 12};
CP = dataArray{:, 13};
DVms = dataArray{:, 14};
eff = dataArray{:, 15};
Pelec = dataArray{:, 16};
Pprop = dataArray{:, 17};
cl_avg = dataArray{:, 18};
cd_avg = dataArray{:, 19};

Vms     = str2double(Vms);
rpm     = str2double(rpm);
Dbeta   = str2double(Dbeta);
TN      = str2double(TN);
QNm     = str2double(QNm);
PshaftW = str2double(PshaftW);
Volts   = str2double(Volts);
Amps    = str2double(Amps);
effmot  = str2double(effmot);
effprop = str2double(effprop);
adv     = str2double(adv);
CT      = str2double(CT);
CP      = str2double(CP);
DVms    = str2double(DVms);
eff     = str2double(eff);
Pelec   = str2double(Pelec);
Pprop   = str2double(Pprop);
cl_avg  = str2double(cl_avg);
cd_avg  = str2double(cd_avg);

